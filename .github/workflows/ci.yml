#
# https://docs.github.com/en/actions
# https://github.com/actions
#

name: CI

on:
  pull_request: {}
  push: {}

jobs:

  pylint:
    name: "PyLint"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test:
          - {PY: "3.8", TOXENV: "lint"}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup Python ${{matrix.test.PY}}"
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.test.PY}}

      - name: "Install tox"
        run: python -m pip -q install tox

      - name: "Test"
        env:
           TOXENV: ${{matrix.test.TOXENV}}
        run: python -m tox -r

  no_database:
    name: "${{matrix.test.osname}} + Python ${{matrix.test.PY}}"
    runs-on: ${{matrix.test.os}}
    strategy:
      matrix:
        test:
          - {os: "ubuntu-18.04", osname: "Ubuntu 18.04", PY: "3.6", TOXENV: "py36"}
          - {os: "ubuntu-18.04", osname: "Ubuntu 18.04", PY: "3.7", TOXENV: "py37"}
          - {os: "ubuntu-20.04", osname: "Ubuntu 20.04", PY: "3.8", TOXENV: "py38"}
          - {os: "macos-10.15", osname: "MacOS 10.15", PY: "3.6", TOXENV: "py36"}
          - {os: "macos-10.15", osname: "MacOS 10.15", PY: "3.8", TOXENV: "py38"}
          - {os: "windows-2016", osname: "Windows 2016", PY: "3.6", TOXENV: "py36"}
          - {os: "windows-2019", osname: "Windows 2019", PY: "3.8", TOXENV: "py38"}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup Python ${{matrix.test.PY}}"
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.test.PY}}

      - name: "Install tox"
        run: python -m pip -q install tox

      - name: "Test"
        env:
           TOXENV: ${{matrix.test.TOXENV}}
        run: python -m tox -r -- --color=yes

  database:
    if: false
    name: "database test (disabled)"
    #name: "PostgreSQL ${{matrix.test.PG}} + Python ${{matrix.test.PY}}"
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        test:
          - {PY: "3.6", PG: "12", TOXENV: "py36"}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup Python ${{matrix.test.PY}}"
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.test.PY}}

      - name: "Install tox"
        run: |
          python -m pip -q install tox

      - name: "InstallDB"
        run: |
          echo "::group::apt-get-update"
          echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main ${{matrix.test.PG}}" \
          | sudo tee /etc/apt/sources.list.d/pgdg.list
          sudo -nH apt-get -q update
          echo "::endgroup::"

          echo "::group::apt-get-install"

          # disable new cluster creation
          sudo -nH mkdir -p /etc/postgresql-common/createcluster.d
          echo "create_main_cluster = false" | sudo -nH tee /etc/postgresql-common/createcluster.d/no-main.conf

          sudo -nH apt-get -qyu install postgresql-${{matrix.test.PG}}
          echo "::endgroup::"

          # tune environment
          echo "::add-path::/usr/lib/postgresql/${{matrix.test.PG}}/bin"
          echo "::set-env name=PGHOST::/tmp"

      - name: "StartDB"
        run: |
          rm -rf data log
          mkdir -p log
          LANG=C initdb data
          sed -ri -e "s,^[# ]*(unix_socket_directories).*,\\1='/tmp'," data/postgresql.conf
          pg_ctl -D data -l log/pg.log start || { cat log/pg.log ; exit 1; }

      - name: "Test"
        env:
           TOXENV: ${{matrix.test.TOXENV}}
        run: |
          python -m tox -r -- --color=yes

      - name: "StopDB"
        run: |
          pg_ctl -D data stop
          rm -rf data log /tmp/.s.PGSQL*

